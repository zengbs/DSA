==94250== Memcheck, a memory error detector
==94250== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==94250== Using Valgrind-3.14.0-353a3587bb-20181007X and LibVEX; rerun with -h for copyright info
==94250== Command: ./a.out
==94250== 
--94250-- Valgrind options:
--94250--    --leak-check=full
--94250--    --show-leak-kinds=all
--94250--    --verbose
--94250-- Contents of /proc/version:
--94250--   Linux version 3.10.0-1062.el7.x86_64 (mockbuild@kbuilder.bsys.centos.org) (gcc version 4.8.5 20150623 (Red Hat 4.8.5-36) (GCC) ) #1 SMP Wed Aug 7 18:08:02 UTC 2019
--94250-- 
--94250-- Arch and hwcaps: AMD64, LittleEndian, amd64-cx16-lzcnt-rdtscp-sse3-avx-avx2-bmi
--94250-- Page sizes: currently 4096, max supported 4096
--94250-- Valgrind library directory: /usr/lib64/valgrind
--94250-- Reading syms from /projectY/tseng/DSA/hw1/P4_Calculator/a.out
--94250-- Reading syms from /usr/lib64/ld-2.17.so
--94250-- Reading syms from /usr/lib64/valgrind/memcheck-amd64-linux
--94250--    object doesn't have a symbol table
--94250--    object doesn't have a dynamic symbol table
--94250-- Scheduler: using generic scheduler lock implementation.
--94250-- Reading suppressions file: /usr/lib64/valgrind/default.supp
==94250== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-94250-by-tseng-on-eureka00
==94250== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-94250-by-tseng-on-eureka00
==94250== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-94250-by-tseng-on-eureka00
==94250== 
==94250== TO CONTROL THIS PROCESS USING vgdb (which you probably
==94250== don't want to do, unless you know exactly what you're doing,
==94250== or are doing some strange experiment):
==94250==   /usr/lib64/valgrind/../../bin/vgdb --pid=94250 ...command...
==94250== 
==94250== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==94250==   /path/to/gdb ./a.out
==94250== and then give GDB the following command
==94250==   target remote | /usr/lib64/valgrind/../../bin/vgdb --pid=94250
==94250== --pid is optional if only one valgrind process is running
==94250== 
--94250-- REDIR: 0x4019df0 (ld-linux-x86-64.so.2:strlen) redirected to 0x580c66c5 (???)
--94250-- REDIR: 0x4019bc0 (ld-linux-x86-64.so.2:index) redirected to 0x580c66df (???)
--94250-- Reading syms from /usr/lib64/valgrind/vgpreload_core-amd64-linux.so
--94250-- Reading syms from /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so
==94250== WARNING: new redirection conflicts with existing -- ignoring it
--94250--     old: 0x04019df0 (strlen              ) R-> (0000.0) 0x580c66c5 ???
--94250--     new: 0x04019df0 (strlen              ) R-> (2007.0) 0x04c2d0e0 strlen
--94250-- REDIR: 0x4019d70 (ld-linux-x86-64.so.2:strcmp) redirected to 0x4c2e230 (strcmp)
--94250-- REDIR: 0x401aa30 (ld-linux-x86-64.so.2:mempcpy) redirected to 0x4c31de0 (mempcpy)
--94250-- Reading syms from /usr/lib64/libc-2.17.so
--94250-- REDIR: 0x4ec70e0 (libc.so.6:strcasecmp) redirected to 0x4a247a0 (_vgnU_ifunc_wrapper)
--94250-- REDIR: 0x4ec3e60 (libc.so.6:strnlen) redirected to 0x4a247a0 (_vgnU_ifunc_wrapper)
--94250-- REDIR: 0x4ec93b0 (libc.so.6:strncasecmp) redirected to 0x4a247a0 (_vgnU_ifunc_wrapper)
--94250-- REDIR: 0x4ec68c0 (libc.so.6:memset) redirected to 0x4a247a0 (_vgnU_ifunc_wrapper)
--94250-- REDIR: 0x4ec6870 (libc.so.6:memcpy@GLIBC_2.2.5) redirected to 0x4a247a0 (_vgnU_ifunc_wrapper)
--94250-- REDIR: 0x4ec5850 (libc.so.6:__GI_strrchr) redirected to 0x4c2caa0 (__GI_strrchr)
--94250-- REDIR: 0x4ebd4b0 (libc.so.6:calloc) redirected to 0x4c2bf23 (calloc)
--94250-- REDIR: 0x4ebca90 (libc.so.6:malloc) redirected to 0x4c29e1c (malloc)
--94250-- REDIR: 0x4ebceb0 (libc.so.6:free) redirected to 0x4c2af16 (free)
--94250-- REDIR: 0x4ec3d80 (libc.so.6:__GI_strlen) redirected to 0x4c2d040 (__GI_strlen)
==94250== Conditional jump or move depends on uninitialised value(s)
==94250==    at 0x4E75B4C: ____strtod_l_internal (in /usr/lib64/libc-2.17.so)
==94250==    by 0x401265: postfixEvaluation (main.c:271)
==94250==    by 0x4008FA: main (main.c:60)
==94250== 
==94250== Conditional jump or move depends on uninitialised value(s)
==94250==    at 0x4E75B86: ____strtod_l_internal (in /usr/lib64/libc-2.17.so)
==94250==    by 0x401265: postfixEvaluation (main.c:271)
==94250==    by 0x4008FA: main (main.c:60)
==94250== 
==94250== Use of uninitialised value of size 8
==94250==    at 0x4E75DF0: ____strtod_l_internal (in /usr/lib64/libc-2.17.so)
==94250==    by 0x401265: postfixEvaluation (main.c:271)
==94250==    by 0x4008FA: main (main.c:60)
==94250== 
--94250-- REDIR: 0x4ecd370 (libc.so.6:strchrnul) redirected to 0x4c31900 (strchrnul)
--94250-- REDIR: 0x4ec6a90 (libc.so.6:__GI_mempcpy) redirected to 0x4c31b10 (__GI_mempcpy)
1 2 +
3.0000000000000000e+00
==94250== 
==94250== HEAP SUMMARY:
==94250==     in use at exit: 0 bytes in 0 blocks
==94250==   total heap usage: 6 allocs, 6 frees, 11,000,032 bytes allocated
==94250== 
==94250== All heap blocks were freed -- no leaks are possible
==94250== 
==94250== Use --track-origins=yes to see where uninitialised values come from
==94250== ERROR SUMMARY: 6 errors from 3 contexts (suppressed: 0 from 0)
==94250== 
==94250== 2 errors in context 1 of 3:
==94250== Use of uninitialised value of size 8
==94250==    at 0x4E75DF0: ____strtod_l_internal (in /usr/lib64/libc-2.17.so)
==94250==    by 0x401265: postfixEvaluation (main.c:271)
==94250==    by 0x4008FA: main (main.c:60)
==94250== 
==94250== 
==94250== 2 errors in context 2 of 3:
==94250== Conditional jump or move depends on uninitialised value(s)
==94250==    at 0x4E75B86: ____strtod_l_internal (in /usr/lib64/libc-2.17.so)
==94250==    by 0x401265: postfixEvaluation (main.c:271)
==94250==    by 0x4008FA: main (main.c:60)
==94250== 
==94250== 
==94250== 2 errors in context 3 of 3:
==94250== Conditional jump or move depends on uninitialised value(s)
==94250==    at 0x4E75B4C: ____strtod_l_internal (in /usr/lib64/libc-2.17.so)
==94250==    by 0x401265: postfixEvaluation (main.c:271)
==94250==    by 0x4008FA: main (main.c:60)
==94250== 
==94250== ERROR SUMMARY: 6 errors from 3 contexts (suppressed: 0 from 0)
